apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-labeler
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-labeler
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-labeler
subjects:
- kind: ServiceAccount
  name: pod-labeler
  namespace: default
roleRef:
  kind: ClusterRole
  name: pod-labeler
  apiGroup: rbac.authorization.k8s.io
---  
apiVersion: v1
kind: Service
metadata:
  name: pod-labeler
  namespace: default
spec:
  selector:
    app: pod-labeler
  ports:
    - port: 443
      targetPort: tls
      name: application
    - port: 8080
      targetPort: http
      name: healtz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-labeler
  namespace: default
  labels:
    app: pod-labeler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-labeler
  template:
    metadata:
      labels:
        app: pod-labeler
    spec:
      serviceAccountName: pod-labeler
      # securityContext:
        # runAsNonRoot: true
        # runAsUser: 1001
      containers:
      - name: pod-labeler
        image: andreistefanciprian/pod-labeler@${LATEST_DIGEST}
        imagePullPolicy: Always
        ports:
        - containerPort: 443
          name: tls
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: certs
          mountPath: /etc/webhook/certs/
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            # httpHeaders:
            # - name: Custom-Header
            #   value: Awesome
          initialDelaySeconds: 3
          periodSeconds: 10
      volumes:
      - name: certs
        secret:
          secretName: pod-labeler-tls